<?php

require_once './vendor/autoload.php';

define('TWITTER_CONSUMER_KEY', getenv('TWITTER_KEY'));
define('TWITTER_CONSUMER_SECRET', getenv('TWITTER_SECRET'));
define('NEXMO_KEY', getenv('NEXMO_KEY'));
define('NEXMO_SECRET', getenv('NEXMO_SECRET'));
define('NEXMO_FROM', getenv('NEXMO_FROM'));
define('NEXMO_TO', getenv('NEXMO_TO'));

class Hose extends OauthPhirehose
{
    public function __construct($username, $password, $method = Phirehose::METHOD_SAMPLE, $format = self::FORMAT_JSON, $lang = FALSE)
    {
        parent::__construct($username, $password, $method, $format, $lang); // TODO: Change the autogenerated stub

    }

    /**
     * This is the one and only method that must be implemented additionally. As per the streaming API documentation,
     * statuses should NOT be processed within the same process that is performing collection
     *
     * @param string $status
     */
    public function enqueueStatus($status)
    {
        $s = json_decode($status);
        var_dump($s->text);

        $res = file_get_contents('https://rest.nexmo.com/sms/json?' . http_build_query([
                'api_key' => NEXMO_KEY,
                'api_secret' => NEXMO_SECRET,
                'from' => NEXMO_FROM,
                'to' => NEXMO_TO,
                'text' => $s->text
            ]));
        var_dump($res);
    }
}

$hose = new Hose('5536282-mvWJIqrfS7xV4k4wiFkBK6E4T4dlSgDjTjdqCOfhA4', 'oBzQyo3fmVHVpoQPK1yLh2fLe8QuF9PSKl2qLCMxoEccc', Phirehose::METHOD_FILTER);
$track = $argv[1];
$hose->setTrack([$track]);
$hose->consume(true);
